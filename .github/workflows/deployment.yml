---
name: deploy

on:
  push: # on every push and PR to branch
    branches:
      - main
  release: # Execute when a release is created on the master branch
    types:
      - created

jobs:
  deploy-services:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: services
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn test
        run: |
          npm install --global yarn
          yarn
          yarn ci-check

      - name: Configure production
        if: ${{ github.event_name == 'release' }}
        run: |
          echo "production release TBD"

      - name: Configure blue server
        if: ${{ github.event_name == 'push'}}
        run: |
          sed -i  's/"postinstall":.*$/"postinstall": ""/g' package.json
          export CI=1
          export HUSKY=0
          echo "IBM_CLOUD_API_KEY=${{ secrets.BLUE_IBM_CLOUD_API_KEY }}" >> $GITHUB_ENV
          echo "IBM_CLOUD_CF_API=${{ secrets.BLUE_IBM_CLOUD_CF_API }}" >> $GITHUB_ENV
          echo "IBM_CLOUD_CF_ORG=${{ secrets.BLUE_IBM_CLOUD_CF_ORG }}" >> $GITHUB_ENV
          echo "IBM_CLOUD_CF_SPACE=${{ secrets.BLUE_IBM_CLOUD_CF_SPACE }}" >> $GITHUB_ENV
          echo "APP_VARS_FILE=${{ secrets.BLUE_APP_VARS_FILE }}" >> $GITHUB_ENV
          echo "IBM_MANIFEST_FILE=${{ secrets.BLUE_IBM_MANIFEST_FILE }}" >> $GITHUB_ENV

      - name: Deploy services to IBM Cloud Foundry
        # You may pin to the exact commit or the version.
        uses: IBM/cloudfoundry-deploy@master
        with:
          IBM_CLOUD_API_KEY: $IBM_CLOUD_API_KEY
          IBM_CLOUD_CF_API: $IBM_CLOUD_CF_API
          IBM_CLOUD_CF_ORG: $IBM_CLOUD_CF_ORG
          IBM_CLOUD_CF_SPACE: $IBM_CLOUD_CF_SPACE
          APP_MANIFEST_FILE: $IBM_MANIFEST_FILE
          APP_VARS_FILE: $APP_VARS_FILE

  deploy-ui:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ui
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn test
        run: |
          npm install --global yarn
          yarn
          yarn ci-check

      - name: Yarn build
        run: yarn build

      - name: Configure production
        if: ${{ github.event_name == 'release' }}
        run: |
          echo "production release TBD"

      - name: Configure blue server
        if: ${{ github.event_name == 'push'}}
        run: |
          sed -i  's/"postinstall":.*$/"postinstall": "",/g' package.json
          export CI=1
          export HUSKY=0
          echo "IBM_CLOUD_API_KEY=${{ secrets.BLUE_IBM_CLOUD_API_KEY }}" >> $GITHUB_ENV
          echo "IBM_CLOUD_CF_API=${{ secrets.BLUE_IBM_CLOUD_CF_API }}" >> $GITHUB_ENV
          echo "IBM_CLOUD_CF_ORG=${{ secrets.BLUE_IBM_CLOUD_CF_ORG }}" >> $GITHUB_ENV
          echo "IBM_CLOUD_CF_SPACE=${{ secrets.BLUE_IBM_CLOUD_CF_SPACE }}" >> $GITHUB_ENV
          echo "APP_VARS_FILE=${{ secrets.BLUE_APP_VARS_FILE }}" >> $GITHUB_ENV
          echo "IBM_MANIFEST_FILE=${{ secrets.BLUE_IBM_MANIFEST_FILE }}" >> $GITHUB_ENV

      - name: Deploy UI to IBM Cloud Foundry
        # You may pin to the exact commit or the version.
        uses: IBM/cloudfoundry-deploy@master
        with:
          IBM_CLOUD_API_KEY: $IBM_CLOUD_API_KEY
          IBM_CLOUD_CF_API: $IBM_CLOUD_CF_API
          IBM_CLOUD_CF_ORG: $IBM_CLOUD_CF_ORG
          IBM_CLOUD_CF_SPACE: $IBM_CLOUD_CF_SPACE
          APP_MANIFEST_FILE: $IBM_MANIFEST_FILE
          APP_VARS_FILE: $APP_VARS_FILE
